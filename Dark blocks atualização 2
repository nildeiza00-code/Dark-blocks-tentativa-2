-- Teleporte avançado com bypass de anti-cheat
local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local PhysicsService = game:GetService("PhysicsService")
local StarterGui = game:GetService("StarterGui")

-- Configurações do teleporte
local pathLength = 12
local stepDelay = 0.07

-- Criar grupo de colisão personalizado se não existir
if not PhysicsService:GetCollisionGroupName("TeleportBypass") then
    PhysicsService:CreateCollisionGroup("TeleportBypass")
    PhysicsService:CollisionGroupSetCollidable("TeleportBypass", "Default", false)
end

-- Função: ligar/desligar colisão
local function disableCollision(character, state)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            if state then
                part.CanCollide = false
                part.CanTouch = false
                part.CanQuery = false
                PhysicsService:SetPartCollisionGroup(part, "TeleportBypass")
                part.Velocity = Vector3.new(0,0,0)
                part.RotVelocity = Vector3.new(0,0,0)
            else
                part.CanCollide = true
                part.CanTouch = true
                part.CanQuery = true
                PhysicsService:SetPartCollisionGroup(part, "Default")
            end
        end
    end
end

-- Função: teleporte
local function SmoothTeleport()
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end

    task.wait(math.random(10,30)/100)
    disableCollision(char,true)

    local randomAngle = math.rad(math.random(-5,5))
    local dir = (root.CFrame * CFrame.Angles(0, randomAngle, 0)).LookVector
    local steps = math.random(8,12)

    for i = 1, steps do
        if not root or not root.Parent then break end
        local currentStep = dir * (pathLength / steps) * (0.9 + math.random()*0.2)
        local newPos = root.Position + currentStep
        root.CFrame = CFrame.new(newPos) * CFrame.Angles(
            math.rad(math.random(-2,2)),
            math.rad(math.random(-3,3)),
            math.rad(math.random(-2,2))
        )
        task.wait(stepDelay*(0.8 + math.random()*0.4))
    end

    task.wait(0.1)
    disableCollision(char,false)
    if root and root.Parent then
        root.Velocity = Vector3.new(0,0,0)
        root.AssemblyLinearVelocity = Vector3.new(0,0,0)
        root.AssemblyAngularVelocity = Vector3.new(0,0,0)
    end
end

-- Função: criar GUI confiável
local function createGUI()
    -- Remove GUI antiga se existir
    if game:GetService("CoreGui"):FindFirstChild("TeleGUI") then
        game:GetService("CoreGui").TeleGUI:Destroy()
    end

    -- Cria ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "TeleGUI"
    ScreenGui.ResetOnSpawn = false

    -- Tenta colocar no CoreGui (Delta Executor permite)
    local success, err = pcall(function()
        ScreenGui.Parent = game:GetService("CoreGui")
    end)

    -- Fallback: se não funcionar, manda notificação
    if not success then
        StarterGui:SetCore("SendNotification", {
            Title = "Delta Executor",
            Text = "Não foi possível criar painel no CoreGui!",
            Duration = 5
        })
        return
    end

    -- Frame principal
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0,180,0,60)
    Frame.Position = UDim2.new(0.5,-90,0.8,0)
    Frame.BackgroundColor3 = Color3.fromRGB(33,33,40)
    Frame.BorderSizePixel = 0
    Frame.AnchorPoint = Vector2.new(0.5,0)
    Frame.Parent = ScreenGui
    Frame.Active = true

    -- Botão Teleportar
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1,-24,1,-24)
    Button.Position = UDim2.new(0,12,0,12)
    Button.BackgroundColor3 = Color3.fromRGB(80,120,80)
    Button.TextColor3 = Color3.fromRGB(230,255,230)
    Button.Font = Enum.Font.GothamBold
    Button.TextSize = 22
    Button.Text = "TELEPORTAR"
    Button.Parent = Frame
    Button.AutoButtonColor = true
    Button.MouseButton1Click:Connect(SmoothTeleport)

    -- Sistema de arrastar
    local dragging = false
    local dragInput, dragStart, startPos

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            Frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Inicializa GUI
createGUI()
