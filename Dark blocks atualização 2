-- Script adaptado: GUI visível + teleporte suave com 10 studs/frame via mouse

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Remove GUI se já existir, pra evitar duplicações
if playerGui:FindFirstChild("TeleportGUI") then
    playerGui.TeleportGUI:Destroy()
end

-- Cria a ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "TeleportGUI"
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- Cria o botão
local botao = Instance.new("TextButton")
botao.Size = UDim2.new(0, 200, 0, 50)
botao.Position = UDim2.new(0.5, -100, 0.8, 0) -- embaixo da tela, centralizado
botao.Text = "Teleportar"
botao.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
botao.TextColor3 = Color3.fromRGB(255, 255, 255)
botao.Font = Enum.Font.SourceSansBold
botao.TextSize = 22
botao.Parent = gui

-- Função de teleporte suave, com sua lógica de 10 studs/frame
local function teleportar(destino)
    local personagem = player.Character
    if not personagem or not personagem.PrimaryPart then
        warn("Personagem ou PrimaryPart não encontrado.")
        return
    end

    local origem = personagem.PrimaryPart.Position
    local distancia = (destino - origem).Magnitude
    local velocidade = 10
    local passos = math.ceil(distancia / velocidade)

    for i = 1, passos do
        local alpha = i / passos
        local novaPos = origem:Lerp(destino, alpha)
        personagem:SetPrimaryPartCFrame(CFrame.new(novaPos))
        task.wait()
    end
end

-- Quando clicar no botão
botao.MouseButton1Click:Connect(function()
    local mouse = player:GetMouse()
    -- Espera um momento até clicar no jogo para definir destino, ou usar mouse.Hit
    local destino = mouse.Hit and mouse.Hit.p
    if destino then
        teleportar(destino)
    else
        warn("Não conseguiu determinar posição do mouse.")
    end
end)
