-- Teleporte avançado com bypass de anti-cheat
local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local PhysicsService = game:GetService("PhysicsService")

-- Configurações do teleporte
local pathLength = 12
local stepDelay = 0.07

-- Criar grupo de colisão personalizado se não existir
if not PhysicsService:GetCollisionGroupName("TeleportBypass") then
    PhysicsService:CreateCollisionGroup("TeleportBypass")
    PhysicsService:CollisionGroupSetCollidable("TeleportBypass", "Default", false)
end

-- Função: ligar/desligar colisão
local function disableCollision(character, state)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            if state then
                part.CanCollide = false
                part.CanTouch = false
                part.CanQuery = false
                PhysicsService:SetPartCollisionGroup(part, "TeleportBypass")
                part.Velocity = Vector3.new(0, 0, 0)
                part.RotVelocity = Vector3.new(0, 0, 0)
            else
                part.CanCollide = true
                part.CanTouch = true
                part.CanQuery = true
                PhysicsService:SetPartCollisionGroup(part, "Default")
            end
        end
    end
end

-- Função: teleporte seguro
local function SmoothTeleport()
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end

    task.wait(math.random(10,30)/100)
    disableCollision(char,true)

    local randomAngle = math.rad(math.random(-5,5))
    local dir = (root.CFrame * CFrame.Angles(0,randomAngle,0)).LookVector
    local steps = math.random(8,12)

    for i=1,steps do
        if not root or not root.Parent then break end
        local currentStep = dir * (pathLength / steps) * (0.9 + math.random()*0.2)
        local newPos = root.Position + currentStep
        root.CFrame = CFrame.new(newPos) * CFrame.Angles(
            math.rad(math.random(-2,2)),
            math.rad(math.random(-3,3)),
            math.rad(math.random(-2,2))
        )
        task.wait(stepDelay*(0.8 + math.random()*0.4))
    end

    task.wait(0.1)
    disableCollision(char,false)
    if root and root.Parent then
        root.Velocity = Vector3.new(0,0,0)
        root.AssemblyLinearVelocity = Vector3.new(0,0,0)
        root.AssemblyAngularVelocity = Vector3.new(0,0,0)
    end
end

-- Função para remover GUI antiga
local function safeRemoveGUI()
    local playerGui = player:FindFirstChild("PlayerGui")
    if playerGui then
        local existingGUI = playerGui:FindFirstChild("TeleGUI")
        if existingGUI then
            existingGUI:Destroy()
        end
    end
end

-- Criar GUI 100% funcional para executores
local function createGUI()
    safeRemoveGUI()
    
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- Garantir visibilidade em executores
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "TeleGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = playerGui

    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0,200,0,50)
    Frame.Position = UDim2.new(0,20,0.5,-25)
    Frame.BackgroundColor3 = Color3.fromRGB(33,33,40)
    Frame.BorderSizePixel = 0
    Frame.AnchorPoint = Vector2.new(0,0.5)
    Frame.Parent = ScreenGui

    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1,-16,1,-16)
    Button.Position = UDim2.new(0,8,0,8)
    Button.BackgroundColor3 = Color3.fromRGB(80,120,80)
    Button.TextColor3 = Color3.fromRGB(230,255,230)
    Button.Font = Enum.Font.GothamBold
    Button.TextSize = 22
    Button.Text = "TELEPORTAR"
    Button.Parent = Frame
    Button.AutoButtonColor = true

    -- Funcionalidade 100%
    Button.MouseButton1Click:Connect(function()
        SmoothTeleport()
    end)
end

-- Hotkey T para teleporte
UIS.InputBegan:Connect(function(input,processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.T then
        SmoothTeleport()
    end
end)

-- Inicializar GUI
if player.Character then
    createGUI()
else
    player.CharacterAdded:Connect(function()
        task.wait(1)
        createGUI()
    end)
end
